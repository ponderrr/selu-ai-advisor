"""add level & timestamps to courses

Revision ID: c4458146180c
Revises: f9fc17d8f896
Create Date: 2025-06-04 17:25:28.393656

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, etc…
revision: str = "c4458146180c"
down_revision: str = "f9fc17d8f896"
branch_labels = None
depends_on = None

# ---------------------------------------------------------------------
courselevel_enum = sa.Enum(
    "LEVEL_100",
    "LEVEL_200",
    "LEVEL_300",
    "LEVEL_400",
    "GRADUATE",
    name="courselevel",
)


def upgrade() -> None:
    bind = op.get_bind()

    # 1) Create the enum type if it doesn’t exist
    courselevel_enum.create(bind, checkfirst=True)

    # 2) Add the column, default temporarily nullable so existing rows pass
    op.add_column(
        "courses",
        sa.Column("level", courselevel_enum, nullable=True, server_default="LEVEL_100"),
    )

    # 3) Make it NOT NULL now that every row has a value
    op.alter_column("courses", "level", nullable=False)

    # 4) Add created_at / updated_at
    op.add_column(
        "courses",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("NOW()"),
            nullable=False,
        ),
    )
    op.add_column(
        "courses",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("NOW()"),
            onupdate=sa.text("NOW()"),
            nullable=False,
        ),
    )

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('courses', 'updated_at')
    op.drop_column('courses', 'created_at')
    op.drop_column('courses', 'level')
    # ### end Alembic commands ###
