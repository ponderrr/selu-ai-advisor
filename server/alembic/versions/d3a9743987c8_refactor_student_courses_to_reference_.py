"""refactor student_courses to reference users

Revision ID: d3a9743987c8
Revises: c6ed2654ea7d
Create Date: 2025-05-31 14:55:18.649832

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd3a9743987c8'
down_revision: Union[str, None] = 'c6ed2654ea7d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Drop the foreign key constraint first
    op.drop_constraint('student_courses_student_id_fkey', 'student_courses', type_='foreignkey')

    # Now safe to drop students table
    op.drop_table('students')

    # Alter column type from Integer -> String
    op.alter_column('student_courses', 'student_id',
        existing_type=sa.INTEGER(),
        type_=sa.String(),
        existing_nullable=False
    )

    # Add w_number to users if it doesnâ€™t already exist
    op.add_column('users', sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True))

    # Add unique index on w_number so it can be FK target
    op.create_index('ix_users_w_number', 'users', ['w_number'], unique=True)

    # Create foreign key from student_courses.student_id -> users.w_number
    op.create_foreign_key('fk_student_courses_user_id', 'student_courses', 'users', ['student_id'], ['w_number'])

    # Clean up other unused user fields if needed
    op.drop_column('users', 'id')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'updated_at')



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('users', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_users_w_number'), table_name='users')
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('users', 'w_number')
    op.drop_constraint(None, 'student_courses', type_='foreignkey')
    op.create_foreign_key(op.f('student_courses_student_id_fkey'), 'student_courses', 'students', ['student_id'], ['id'])
    op.alter_column('student_courses', 'student_id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.create_table('students',
    sa.Column('w_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('entry_year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_hours', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('students_pkey')),
    sa.UniqueConstraint('email', name=op.f('students_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_students_w_number'), 'students', ['w_number'], unique=True)
    op.create_index(op.f('ix_students_id'), 'students', ['id'], unique=False)
    # ### end Alembic commands ###
